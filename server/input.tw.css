@tailwind base;
@tailwind components;
@tailwind utilities;

/*--- HTMX loading indicator ---*/

.hx-loading {
  pointer-events: none;
  animation: hx-loading-eased 0.4s forwards;
}

.hx-loading-indicator {
  opacity: 0;
  animation: hx-indicator-eased 1s forwards;
}

:root.dark .hx-loading-indicator::before {
  /* dark mode */
  --hx-loading-indicator-gradient: no-repeat
    linear-gradient(
      #ffffff calc(50% - 10px),
      #ffffff00 0 calc(50% + 10px),
      #ffffff 0
    );
  box-shadow: 0px 0px 10px 20px #181818;
}

.hx-loading-indicator::before {
  content: "";
  display: block;
  position: absolute;
  z-index: 11;
  top: calc(50%-1rem);
  left: calc(50%-1rem);
  opacity: 1;
  width: 2rem;
  aspect-ratio: 1;
  animation: hx-loading-indicator-animation 1s infinite linear;
  background: var(--hx-loading-indicator-gradient) 0% 100%,
    var(--hx-loading-indicator-gradient) 50% 100%,
    var(--hx-loading-indicator-gradient) 100% 100%;
  background-size: 20% calc(200% + 20px);

  /* light mode */
  --hx-loading-indicator-gradient: no-repeat
    linear-gradient(
      #000000 calc(50% - 10px),
      #00000000 0 calc(50% + 10px),
      #000000 0
    );
  box-shadow: 0px 0px 10px 20px #ffffff;
}

@keyframes hx-loading-indicator-animation {
  33% {
    background-position: 0% 50%, 50% 100%, 100% 100%;
  }
  50% {
    background-position: 0% 0%, 50% 50%, 100% 100%;
  }
  66% {
    background-position: 0% 0%, 50% 0%, 100% 50%;
  }
  100% {
    background-position: 0% 0%, 50% 0%, 100% 0%;
  }
}

@keyframes hx-indicator-eased {
  to {
    opacity: 1;
  }
}

@keyframes hx-loading-eased {
  to {
    opacity: 0.3;
  }
}

/*--- Skeleton ---*/

:root {
  --skeleton-bg-color: #e8e8e8;
  --skeleton-accent-color: #f2f2f2;
}

:root.dark {
  --skeleton-bg-color: #333333;
  --skeleton-accent-color: #3b3b3b;
}

.hide-until-loaded:has(:not(*:defined)) * {
  /* Avoid displaying contents behind this wrapper before they're initialized.
  This prevents HTML content from flashing before they get hidden by the dynamic
  JS container components. */
  display: none;
}

.hide-until-loaded.skeleton:has(:not(*:defined))::before {
  /* Once the dynamic JS components are initialized their contents may display again. */
  display: block;
}

.skeleton {
  position: relative;
}

.skeleton::before {
  content: "";
  display: block;
  position: absolute;
  top: 4px;
  left: 4px;
  right: 4px;
  bottom: 4px;
  border-radius: 12px;
  background: linear-gradient(
    90deg,
    var(--skeleton-bg-color) 25%,
    var(--skeleton-accent-color) 50%,
    var(--skeleton-bg-color) 75%
  );
  background-size: 200% 100%;
  /* Start fully transparent and transition to visible after a delay */
  opacity: 0;
  display: none;
}

.skeleton * {
  /* Show contents of the skeleton once they got initialized. */
  opacity: 1;
}

.skeleton:has(:not(*:defined)) * {
  /* Avoid showing contents behind the skeleton before they're initialized.
  Because some content may be static HTML and it would be visible behind
  the skeleton body. */
  opacity: 0;
}

.skeleton:has(:not(*:defined))::before {
  display: block;
  animation:
    /* 20ms delay before showing the skeleton for a clean white/black page.
    This avoids visual flickering when the page loads within the delay period. */ fadeInSkeleton
      0.2s forwards ease-in-out 20ms,
    skeletonLoading 2s infinite linear 20ms;
}

@keyframes fadeInSkeleton {
  to {
    opacity: 1;
  }
}

@keyframes skeletonLoading {
  0% {
    background-position: 200% 0;
  }

  100% {
    background-position: -200% 0;
  }
}
