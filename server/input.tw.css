@tailwind base;
@tailwind components;
@tailwind utilities;

/* Default global styles */
html button,
html input,
html select,
html textarea {
  border: 1px solid grey;
  border-radius: 0.2rem;
  padding: 0.2rem;
  padding-left: 0.3rem;
  padding-right: 0.3rem;
  height: 2rem;
  background-color: transparent;
}

html table td {
  border: 1px solid lightgrey;
  padding: 0.2rem 0.5rem 0.2rem 0.5rem;
}

.non-interactable {
  pointer-events: none;
  animation: hx-eased-loading 0.4s forwards;
}

@keyframes hx-eased-loading {
  to {
    opacity: 0.35;
  }
}

/*--- Skeleton ---*/

:root {
  --skeleton-bg-color: #e8e8e8;
  --skeleton-accent-color: #f2f2f2;
}

:root.dark {
  --skeleton-bg-color: #333333;
  --skeleton-accent-color: #3b3b3b;
}

.skeleton {
  position: relative;
}

.skeleton::before {
  content: "";
  display: block;
  position: absolute;
  top: 4px;
  left: 4px;
  right: 4px;
  bottom: 4px;
  border-radius: 12px;
  background: linear-gradient(
    90deg,
    var(--skeleton-bg-color) 25%,
    var(--skeleton-accent-color) 50%,
    var(--skeleton-bg-color) 75%
  );
  background-size: 200% 100%;
  /* Start fully transparent and transition to visible after a delay */
  opacity: 0;
}

.skeleton * {
  /* Show contents of the skeleton once they got initialized. */
  opacity: 1;
}

.skeleton:has(:not(*:defined)) * {
  /* Avoid showing contents behind the skeleton before they're initialized.
  Because some content may be static HTML and it would be visible behind
  the skeleton body. */
  opacity: 0;
}

.skeleton:has(:not(*:defined))::before {
  animation:
    /* 20ms delay before showing the skeleton for a clean white/black page.
    This avoids visual flickering when the page loads within the delay period. */ fadeInSkeleton
      0.2s forwards ease-in-out 20ms,
    skeletonLoading 2s infinite linear 20ms;
}

@keyframes fadeInSkeleton {
  to {
    opacity: 1;
  }
}

@keyframes skeletonLoading {
  0% {
    background-position: 200% 0;
  }

  100% {
    background-position: -200% 0;
  }
}
